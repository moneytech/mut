			     -*- Text -*-

21:05 - Start.

21:18 - Made it print out the section name for the sections I'm
        interested in.  However, there is something wrong :-

$ ./main ./main
.interp
.dynsym
.init
main: exec/elf/mut_exec.c:437: mut_exec_section_header_string_table_lookup: Assertion `index < reader->strings.size' failed.
IOT trap/Abort
$ ./main ../misc/stabs/elf
.interp
.dynsym
.init
main: exec/elf/mut_exec.c:437: mut_exec_section_header_string_table_lookup: Assertion `index < reader->strings.size' failed.
IOT trap/Abort

21:18 - Added an extra bit of diagnostic to see why each one is being
        displayed :-

$ ./main ../misc/stabs/elf
PROGBITS .interp
DYNSYM .dynsym
PROGBITS .init
main: exec/elf/mut_exec.c:437: mut_exec_section_header_string_table_lookup: Assertion `index < reader->strings.size' failed.
IOT trap/Abort
$ 

21:20 - It is clear that it is the PROGBITS one that is causing the
        problem :-

$ gdb ./main
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.16 (i486-unknown-linux --target i486-linux), 
Copyright 1996 Free Software Foundation, Inc...
(gdb) run  ../misc/stabs/elf
PROGBITS .interp
DYNSYM .dynsym
PROGBITS .init
main: exec/elf/mut_exec.c:437: mut_exec_section_header_string_table_lookup: Assertion `index < reader->strings.size' failed.

Program received signal SIGABRT, Aborted.
0x40074df5 in __libc_kill ()
(gdb) bt
#0  0x40074df5 in __libc_kill ()
#1  0x400419fd in gsignal ()
#2  0x804b2ff in mut_exec_locate_sections (reader=0xbffffa70)
    at exec/elf/mut_exec.c:500
#3  0x804b54c in mut_exec_open (exec=0xbffffc18, 
    file_name=0xbffffe0f "../misc/stabs/elf", log=0xbffffbe8)
    at exec/elf/mut_exec.c:551
#4  0x804e05c in mut_open (m=0xbffffbfc, argv=0xbffffd3c, l=0xbffffbe8, 
    flags=0) at mut.c:214
#5  0x8051b5f in main (argc=2, argv=0xbffffd38) at ui/tty/mut_ui.c:181
#6  0x80488fb in _start ()
(gdb) p *reader
$2 = {header = {
    e_ident = "\177ELF\001\001\001\000\000\000\000\000\000\000\000", 
    e_type = 2, e_machine = 3, e_version = 1, e_entry = 134514224, 
    e_phoff = 52, e_shoff = 23500, e_flags = 0, e_ehsize = 52, 
    e_phentsize = 32, e_phnum = 5, e_shentsize = 40, e_shnum = 25, 
    e_shstrndx = 22}, section = {header = {{sh_name = 27, sh_type = 1, 
        sh_flags = 2, sh_addr = 134512852, sh_offset = 212, sh_size = 19, 
        sh_link = 0, sh_info = 0, sh_addralign = 1, sh_entsize = 0}, {
        sh_name = 41, sh_type = 11, sh_flags = 2, sh_addr = 134513068, 
        sh_offset = 428, sh_size = 480, sh_link = 4, sh_info = 1, 
        sh_addralign = 4, sh_entsize = 16}, {sh_name = 75, sh_type = 1, 
        sh_flags = 6, sh_addr = 134513952, sh_offset = 1312, sh_size = 8, 
        sh_link = 0, sh_info = 0, sh_addralign = 16, sh_entsize = 0}}, 
    free = 81}, strings = {data = 0x1 <Address 0x1 out of bounds>, size = 6}, 
  dsymtab = 0x8048528, symtab = 0x528, stabs = 0x100, strtab = {sh_name = 0, 
    sh_type = 0, sh_flags = 4, sh_addr = 4, sh_offset = 1074346360, 
    sh_size = 1073766928, sh_link = 0, sh_info = 1073751168, 
    sh_addralign = 1074297920, sh_entsize = 1074297920}, source = 0x8053bf0, 
  log = 0xbffffbe8, file_name = 0xbffffe0f "../misc/stabs/elf"}
(gdb) 

21:22 - The strings field looks a bit dubious.

21:28 - Whilst stepping through, realised that valid data was being
        overwritten because of multiple PROGBITS hits :-

GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.16 (i486-unknown-linux --target i486-linux), 
Copyright 1996 Free Software Foundation, Inc...
Breakpoint 1 at 0x804b520: file exec/elf/mut_exec.c, line 548.
(gdb) run ../misc/stabs/elf

Breakpoint 1, mut_exec_open (exec=0xbffffc18, 
    file_name=0xbffffe0f "../misc/stabs/elf", log=0xbffffbe8)
    at exec/elf/mut_exec.c:548
(gdb) s
mut_exec_section_header_string_table_open (reader=0xbffffa70)
    at exec/elf/mut_exec.c:382
(gdb) p reader->header
$1 = {e_ident = "\177ELF\001\001\001\000\000\000\000\000\000\000\000", 
  e_type = 2, e_machine = 3, e_version = 1, e_entry = 134514224, e_phoff = 52, 
  e_shoff = 23500, e_flags = 0, e_ehsize = 52, e_phentsize = 32, e_phnum = 5, 
  e_shentsize = 40, e_shnum = 25, e_shstrndx = 22}
(gdb) n
(gdb) n
(gdb) p byte_offset
$2 = 24380
(gdb) n
(gdb) n
(gdb) p header
$3 = {sh_name = 17, sh_type = 3, sh_flags = 0, sh_addr = 0, sh_offset = 23325, 
  sh_size = 175, sh_link = 0, sh_info = 0, sh_addralign = 1, sh_entsize = 0}
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) p reader->strings.data
$4 = 0x8053c48 ""
(gdb) x/32 reader->strings.data
0x8053c48 <store+152>:	0x79732e00	0x6261746d	0x74732e00	0x62617472
0x8053c58 <store+168>:	0x68732e00	0x74727473	0x2e006261	0x65746e69
0x8053c68 <store+184>:	0x2e007072	0x68736168	0x79642e00	0x6d79736e
0x8053c78 <store+200>:	0x79642e00	0x7274736e	0x65722e00	0x73622e6c
0x8053c88 <store+216>:	0x722e0073	0x702e6c65	0x2e00746c	0x74696e69
0x8053c98 <store+232>:	0x6c702e00	0x742e0074	0x00747865	0x6e69662e
0x8053ca8 <store+248>:	0x722e0069	0x7461646f	0x642e0061	0x00617461
0x8053cb8 <store+264>:	0x6f74632e	0x2e007372	0x726f7464	0x672e0073
(gdb) x/32c reader->strings.data
0x8053c48 <store+152>:	0 '\000'	46 '.'	115 's'	121 'y'	109 'm'	116 't'	97 'a'	98 'b'
0x8053c50 <store+160>:	0 '\000'	46 '.'	115 's'	116 't'	114 'r'	116 't'	97 'a'	98 'b'
0x8053c58 <store+168>:	0 '\000'	46 '.'	115 's'	104 'h'	115 's'	116 't'	114 'r'	116 't'
0x8053c60 <store+176>:	97 'a'	98 'b'	0 '\000'	46 '.'	105 'i'	110 'n'	116 't'	101 'e'
(gdb) s
(gdb) s
mut_exec_open (exec=0xbffffc18, file_name=0xbffffe0f "../misc/stabs/elf", 
    log=0xbffffbe8) at exec/elf/mut_exec.c:551
(gdb) s
mut_exec_locate_sections (reader=0xbffffa70) at exec/elf/mut_exec.c:467
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) p *reader
$5 = {header = {
    e_ident = "\177ELF\001\001\001\000\000\000\000\000\000\000\000", 
    e_type = 2, e_machine = 3, e_version = 1, e_entry = 134514224, 
    e_phoff = 52, e_shoff = 23500, e_flags = 0, e_ehsize = 52, 
    e_phentsize = 32, e_phnum = 5, e_shentsize = 40, e_shnum = 25, 
    e_shstrndx = 22}, section = {header = {{sh_name = 0, sh_type = 0, 
        sh_flags = 0, sh_addr = 0, sh_offset = 0, sh_size = 0, 
        sh_link = 1073753278, sh_info = 1073766068, sh_addralign = 13440, 
        sh_entsize = 0}, {sh_name = 1073819599, sh_type = 1073753278, 
        sh_flags = 1073766068, sh_addr = 134513192, sh_offset = 1073766912, 
        sh_size = 134514148, sh_link = 1073767104, sh_info = 0, 
        sh_addralign = 0, sh_entsize = 1073753278}, {sh_name = 1073766068, 
        sh_type = 1073766928, sh_flags = 14720, sh_addr = 1073820564, 
        sh_offset = 1073767104, sh_size = 1073766928, sh_link = 0, 
        sh_info = 60376606, sh_addralign = 1073785120, 
        sh_entsize = 1073810112}}, free = 0}, strings = {data = 0x8053c48 "", 
    size = 175}, dsymtab = 0x40006160, symtab = 0x0, stabs = 0x40006200, 
  strtab = {sh_name = 3221224304, sh_type = 1073751319, sh_flags = 1073820552, 
    sh_addr = 3221224228, sh_offset = 1074346360, sh_size = 1073766928, 
    sh_link = 0, sh_info = 1073751168, sh_addralign = 1074297920, 
    sh_entsize = 1074297920}, source = 0x8053bf0, log = 0xbffffbe8, 
  file_name = 0xbffffe0f "../misc/stabs/elf"}
(gdb) n
(gdb) n
(gdb) p reader->section.free
$6 = 0
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) n
(gdb) 

21:59 - Reads in .stabs data and keeps it.  Probably don't want to
        do this, instead should read it in and iterate over it, adding
        the info. to the symbols that have been read in before
        throwing the away the .stabs.

$ ./main ../misc/stabs/bar
16
./main info process.exited 0

22:01 - Shutdown.
